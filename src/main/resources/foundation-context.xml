<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <import resource="mongo.xml"/>

    <import resource="redis.xml"/>

    <bean id="calendarJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="calendarNotification" />
        <property name="targetMethod" value="process" />
        <property name="concurrent" value="false" />
    </bean>

    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="calendarJob" />
        <property name="cronExpression" value="0 0/1 * * * ?" />
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" destroy-method="destroy">
        <property name="configLocation" value="classpath:quartz.properties"/>
        <property name="waitForJobsToCompleteOnShutdown" value="true"/>
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>

    <context:component-scan base-package="uss.coi.cop.foundation"/>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <!--property name="url" value="jdbc:mysql://192.168.122.60:9306?characterEncoding=utf8"/-->
        <property name="url" value="jdbc:mysql://localhost:9306?characterEncoding=utf8"/>
        <property name="username" value=""/>
        <property name="password" value=""/>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>

    <bean id="sphinxDao" class="uss.coi.cop.foundation.sphinx.FakeSphinxDao"/>

    <bean id="httpClient" class="com.ning.http.client.AsyncHttpClient"/>


</beans>